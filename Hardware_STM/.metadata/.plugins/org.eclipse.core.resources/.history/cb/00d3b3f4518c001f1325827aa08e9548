/*
 * helper.h
 *
 *  Created on: Sep 10, 2024
 *      Author: AD
 *
 *  Contain helper functions
 */

#ifndef INC_HELPER_H_
#define INC_HELPER_H_

#include "main.h"
#include "helper.h"


/*--------- MOVEMENT DEFINITION ---------*/
#define FORWARD 		'w'
#define BACKWARD 		's'
#define FORWARD_LEFT 	'a'
#define FORWARD_RIGHT 	'd'
#define BACKWARD_LEFT 	'z'
#define BACKWARD_RIGHT 	'c'
#define STOP 			'x'
#define ACK 			'l'


/*---------- OLED INTERACTION ----------*/
bool is_USER_button_pressed();
void print_OLED(int x, int y, uint8_t* msg, bool var_exist, int32_t val);


/*-------------- COMMANDS --------------*/
void send_ack();


/*-------------- ICM20948 --------------*/
HAL_StatusTypeDef ICM20948_BrustRead(
	I2C_HandleTypeDef* hi2c, 
	uint8_t sel_I2C_addr, 
	uint8_t start_addr, 
	uint16_t number_of_reg_to_read, 
	uint8_t* read_data);

HAL_StatusTypeDef ICM20948_SelectUserBank(
	I2C_HandleTypeDef* hi2c_ptr, 
	uint8_t const selectI2cAddress, 
	int user_bank_num);


void ICM20948_init(
	I2C_HandleTypeDef* hi2c,
	uint8_t I2C_address,
	uint8_t gyro_sensitivity,
	uint8_t  accel_sensitivity);

void ICM20948_readGyroscope_Z(
	I2C_HandleTypeDef* hi2c, 
	uint8_t selectI2cAddress, 
	uint8_t selectGyroSensitivity, 
	float* gyroZ);

void ICM20948_readAccelerometer_all(
	I2C_HandleTypeDef* hi2c, 
	uint8_t selectI2cAddress, 
	uint8_t selectAccelSensitivity, 
	float readings[3]);


/*------------ KALMAN FILTER ------------*/
void kalman_init(kalman_t* kalman, float init_est, float est, float mea);
void kalman_update(kalman_t* kalman, float est, float mea);


/*----------------- PID -----------------*/
void pid_reset(pid_t* pid);
void pid_init(pid_t* pid, float Kp, float Ki, float Kd);
float pid_adjust(pid_t* pid, float error, float scale);


#endif /* INC_HELPER_H_ */
